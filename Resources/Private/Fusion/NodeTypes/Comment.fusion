prototype(WebExcess.Comments:Comment) < prototype(Neos.Fusion:Tag) {
    commentData = WebExcess.Comments:Comment.Data
    replyDepth = 0
    @context {
        commentData = ${this.commentData}
        replyDepth = ${this.replyDepth}
    }

    attributes.class = Neos.Fusion:RawArray {
        comment = 'comment-item'
    }

    content = Neos.Fusion:Array {
        comment = Neos.Fusion:Tag {
            attributes.class = Neos.Fusion:RawArray {
                comment = 'comment'
            }

            content = Neos.Fusion:Array {
                image = WebExcess.Comments:Comment.Image
                content = WebExcess.Comments:Comment.Content
            }
        }

        reply = Neos.Fusion:Tag {
            attributes.class = Neos.Fusion:RawArray {
                reply = 'comment-replies'
            }
            content = Neos.Fusion:Array {
                action = Neos.Fusion:Tag {
                    attributes.class = Neos.Fusion:RawArray {
                        action = 'comment-replies-action'
                    }
                    content = WebExcess.Comments:ReplyButton
                }

                replies = Neos.Fusion:Tag {
                    replyNodes = ${q(node).children('comments').find('[instanceof WebExcess.Comments:Comment]').sort('publishingDate', 'ASC').get()}
                    @context.replyNodes = ${this.replyNodes}
                    @if.hasReplies = ${replyNodes ? true : false}

                    attributes.class = Neos.Fusion:RawArray {
                        replies = 'comment-replies-list'
                    }

                    content = Neos.Fusion:Collection {
                        collection = ${replyNodes}
                        itemName = 'node'
                        itemRenderer = WebExcess.Comments:Comment {
                            replyDepth = ${replyDepth + 1}
                        }
                    }
                }
            }
            @if.repliesEnabled = ${replyDepth < Configuration.setting('WebExcess.Comments.repliesDepth')}
        }
    }

    @process.contentElementWrapping = Neos.Neos:ContentElementWrapping
}
